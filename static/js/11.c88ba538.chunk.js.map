{"version":3,"sources":["styles/styleComponents/StyledActionHistoryMemoty.ts","components/molecules/actionHistoryMemory/ActionHistoryMemory.tsx"],"names":["StyledClose","styled","div","props","show","StyledWrapperActionHistory","section","theme","after","color","backgroundColor","transla","breakPoints","large","middlelarge","extralarge","biglarge","StyledNavLink","NavLink","StyledContainerDiv","minismall","bigsmall","minimedum","medum","bigmedium","HistoryMemory","lazy","ActionHistoryMemory","settransla","history","useHistory","match","useRouteMatch","url","path","isExact","useEffect","push","onClick","component","to"],"mappings":"gMAMaA,EAAcC,UAAOC,IAAV,mEACX,SAACC,GAAD,OAAYA,EAAMC,KAAO,OAAS,WAIlCC,EAA6BJ,UAAOK,QAAV,+tBAM5B,qBAAGC,MAAkBC,MAAMC,SACtB,qBAAGF,MAAkBC,MAAME,mBAC5B,SAACP,GAAD,OACXA,EAAMQ,QAAU,mBAAqB,oBAMlBC,IAAYC,OAIlB,SAACV,GAAD,OACXA,EAAMQ,QAAU,mBAAqB,oBAEpBC,IAAYE,YAIZF,IAAYG,WAGZH,IAAYI,UAGlB,SAACb,GAAD,OACXA,EAAMQ,QAAU,kBAAoB,qBAG7BM,EAAgBhB,kBAAOiB,IAAPjB,CAAH,sKACf,qBAAGM,MAAkBC,MAAMC,QAEfG,IAAYC,OAItBM,EAAqBlB,UAAOC,IAAV,+0BAURU,IAAYQ,UAGZR,IAAYS,SAMZT,IAAYU,UAGZV,IAAYW,MAOZX,IAAYY,UAIZZ,IAAYC,O,OC9E7BY,EAAgBC,gBACpB,kBAAM,iCA0COC,UAvCiD,SAAC,GAGhC,IAF/BhB,EAE8B,EAF9BA,QACAiB,EAC8B,EAD9BA,WAEMC,EAAUC,cACVC,EAAQC,cACNC,EAAuBF,EAAvBE,IAAKC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QAEnBC,qBAAU,WACRP,EAAQQ,KAAR,UAAgBJ,MACf,IASH,OACE,cAAC5B,EAAD,CAA4BM,QAASA,EAArC,SACE,eAACQ,EAAD,WACE,eAAC,IAAD,WACE,cAACnB,EAAD,CAAaI,KAAM+B,EAASG,QARJ,WAC9BV,GAAW,GACXC,EAAQQ,KAAR,UAAgBJ,KAMV,eAGA,cAAC,IAAD,CAAOC,KAAI,UAAKA,EAAL,mBAA4BK,UAAWd,OAEpD,cAACR,EAAD,CACEuB,GAAE,UAAKP,EAAL,mBACFK,QAlBuB,WAC7BV,GAAW,IAeP","file":"static/js/11.c88ba538.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Show } from \"../../components/molecules/actionHistoryMemory/typesTS\";\nimport { Transla } from \"../../shareTS\";\nimport { breakPoints } from \"../breakPoints\";\n\nexport const StyledClose = styled.div<Show>`\n  display: ${(props) => (props.show ? \"none\" : \"block\")};\n  margin-right: 5px;\n`;\n\nexport const StyledWrapperActionHistory = styled.section<Transla>`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  left: 0;\n  text-align: right;\n  color: ${({ theme }) => theme.after.color};\n  background: ${({ theme }) => theme.after.backgroundColor};\n  transform: ${(props) =>\n    props.transla ? \"translateY(105%)\" : \"translateY(16%)\"};\n  transition: transform 2s;\n  border-radius: 20px;\n  box-shadow: 10px 15px 50px #4548604d;\n  z-index: 0;\n  top: -7%;\n  @media (min-width: ${breakPoints.large}px) and (orientation: landscape) {\n    width: 500px;\n    top: 0;\n    left: -14%;\n    transform: ${(props) =>\n      props.transla ? \"translateX(105%)\" : \"translateX(23%)\"};\n  }\n  @media (min-width: ${breakPoints.middlelarge}px) and (orientation: landscape) {\n    width: 700px;\n    left: -60%;\n  }\n  @media (min-width: ${breakPoints.extralarge}px) and (orientation: landscape) {\n    left: -55%;\n  }\n  @media (min-width: ${breakPoints.biglarge}px) and (orientation: landscape) {\n    width: 602px;\n    left: -14px;\n    transform: ${(props) =>\n      props.transla ? \"translateX(95%)\" : \"translateX(13%)\"};\n  }\n`;\nexport const StyledNavLink = styled(NavLink)`\n  color: ${({ theme }) => theme.after.color};\n  text-decoration: none;\n  @media (min-width: ${breakPoints.large}px) and (orientation: landscape) {\n    writing-mode: vertical-rl;\n  }\n`;\nexport const StyledContainerDiv = styled.div`\n  display: flex;\n  position: absolute;\n  right: 100px;\n  top: 75%;\n  width: 50%;\n  margin: 50px 20px 0 20px;\n  text-transform: uppercase;\n  font-size: 1rem;\n\n  @media (min-width: ${breakPoints.minismall}px) {\n    top: 85%;\n  }\n  @media (min-width: ${breakPoints.bigsmall}px) and (orientation: landscape) {\n    top: 73%;\n  }\n  @media (min-width: 533px) and (orientation: landscape) {\n    top: 75%;\n  }\n  @media (min-width: ${breakPoints.minimedum}) and (orientation: landscape) {\n    top: 81%;\n  }\n  @media (min-width: ${breakPoints.medum}px) {\n    top: 80%;\n  }\n\n  @media (min-width: 760px) {\n    top: 83%;\n  }\n  @media (min-width: ${breakPoints.bigmedium}px) and (orientation: portrait) {\n    top: 87%;\n  }\n\n  @media (min-width: ${breakPoints.large}px) and (orientation: landscape) {\n    font-size: var(--unnamed-font-size-20);\n    display: inline;\n    right: 0;\n    top: 0;\n    width: 100px;\n  }\n`;\n","import React, { lazy, useEffect } from \"react\";\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { ActionHistoryMemoryProps } from \"./typesTS\";\nimport {\n  StyledNavLink,\n  StyledWrapperActionHistory,\n  StyledContainerDiv,\n  StyledClose,\n} from \"../../../styles/styleComponents/StyledActionHistoryMemoty\";\nconst HistoryMemory = lazy(\n  () => import(\"../../pages/historyMemory/HistoryMemory\")\n);\n\nconst ActionHistoryMemory: React.FC<ActionHistoryMemoryProps> = ({\n  transla,\n  settransla,\n}: ActionHistoryMemoryProps) => {\n  const history = useHistory();\n  const match = useRouteMatch();\n  const { url, path, isExact } = match;\n\n  useEffect((): void => {\n    history.push(`${url}`);\n  }, []);\n\n  const handleClickOpenHistory = (): void => {\n    settransla(true);\n  };\n  const handleClickCloseHistory = (): void => {\n    settransla(false);\n    history.push(`${url}`);\n  };\n  return (\n    <StyledWrapperActionHistory transla={transla}>\n      <StyledContainerDiv>\n        <Switch>\n          <StyledClose show={isExact} onClick={handleClickCloseHistory}>\n            X\n          </StyledClose>\n          <Route path={`${path}/history-memory`} component={HistoryMemory} />\n        </Switch>\n        <StyledNavLink\n          to={`${url}/history-memory`}\n          onClick={handleClickOpenHistory}\n        >\n          Historia\n        </StyledNavLink>\n      </StyledContainerDiv>\n    </StyledWrapperActionHistory>\n  );\n};\n\nexport default ActionHistoryMemory;\n"],"sourceRoot":""}