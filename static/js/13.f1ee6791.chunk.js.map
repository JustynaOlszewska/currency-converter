{"version":3,"sources":["../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","styles/styleComponents/StyledNumberInputs.ts","components/molecules/numberInputs/NumberInputs.tsx"],"names":["defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","InputAdornment","children","_props$component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","variantProp","muiFormControl","useFormControl","FormControlContext","Provider","value","hiddenLabel","filled","positionStart","positionEnd","marginDense","maxHeight","alignItems","marginTop","marginRight","marginLeft","pointerEvents","FormHelperText","disabled","focused","required","fcs","formControlState","states","contained","dangerouslySetInnerHTML","__html","StyledInputAdornment","styled","ShareColorForm","StyledInput","Input","ShareBorderForm","breakPoints","minismall","small","bigsmall","large","biglarge","StyledFormHelperText","NumberInputs","control","amount","newFromCurrency","newToCurrency","currency","useContext","TaskContext","removeExchangeRate","exchangeRate","handleClick","e","target","defaultValue","render","field","col","onClick","type","placeholder","inputProps","min","maxLength","endAdornment","id","readOnly"],"mappings":"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","file":"static/js/13.f1ee6791.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import styled from \"styled-components\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Input from \"@material-ui/core/Input\";\nimport { ColProps } from \"../../shareTS\";\nimport { breakPoints } from \"../breakPoints\";\nimport { ShareColorForm, ShareBorderForm } from \"../share\";\n\nexport const StyledInputAdornment = styled(InputAdornment)<ColProps>`\n  ${ShareColorForm}\n`;\nexport const StyledInput = styled(Input)<ColProps>`\n  width: 100%;\n  height: 16px;\n  && {\n    margin-left: 15px;\n    ${ShareColorForm}\n  }\n  ${ShareBorderForm}\n  @media(min-width: ${breakPoints.minismall}px) {\n    height: 36px;\n  }\n  @media (min-width: ${breakPoints.small}px) {\n    height: 56px;\n  }\n  @media (orientation: landscape) and (min-width: ${breakPoints.small}px) {\n    height: 12px;\n  }\n  @media (orientation: landscape) and (min-width: ${breakPoints.bigsmall}px) {\n    height: 16px;\n  }\n  @media (min-width: ${breakPoints.large}px) and (orientation: landscape) {\n    height: 30px;\n    width: 80%;\n  }\n  @media (orientation: landscape) and (min-width: ${breakPoints.biglarge}px) {\n    height: 56px;\n    width: 100%;\n  }\n`;\nexport const StyledFormHelperText = styled(FormHelperText)<ColProps>`\n  height: 25px;\n  width: 100%;\n  text-align: left;\n  && {\n    margin-left: 15px;\n    font-size: 1.4rem;\n    ${ShareColorForm}\n  }\n`;\n","import React, { useContext } from \"react\";\nimport { Controller } from \"react-hook-form\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TaskContext from \"../../../context/tasks/taskContext\";\nimport { NumberInputsProps } from \"./typesTS\";\nimport {\n  StyledInput,\n  StyledInputAdornment,\n  StyledFormHelperText,\n} from \"../../../styles/styleComponents/StyledNumberInputs\";\n\nconst NumberInputs: React.FC<NumberInputsProps> = ({\n  control,\n  amount,\n  newFromCurrency,\n  newToCurrency,\n  currency,\n}: NumberInputsProps) => {\n  const taskContext = useContext(TaskContext);\n  const { removeExchangeRate, exchangeRate } = taskContext || {};\n\n  const handleClick = (e: React.FocusEvent<any>): void => {\n    const value = e.target.value;\n    if (!removeExchangeRate) return;\n    value && removeExchangeRate();\n  };\n  return (\n    <>\n      <Controller\n        name=\"amount\"\n        control={control}\n        defaultValue=\"\"\n        render={({ field }) => {\n          return (\n            <>\n              <StyledInput\n                {...field}\n                col={amount && \"error\"}\n                onClick={handleClick}\n                type=\"text\"\n                placeholder=\"Wpisz kwotę\"\n                inputProps={{ min: 0, maxLength: 5 }}\n                endAdornment={\n                  <StyledInputAdornment col={amount && \"error\"} position=\"end\">\n                    <p>{newFromCurrency || currency || \"\"}</p>\n                  </StyledInputAdornment>\n                }\n                id=\"standard-basic\"\n              />\n              <StyledFormHelperText col={amount && \"error\"}>\n                {amount && \"Nieprawidłowa wartość\"}\n              </StyledFormHelperText>\n            </>\n          );\n        }}\n      />\n      <Controller\n        name=\"score\"\n        control={control}\n        defaultValue=\"\"\n        render={({ field }) => (\n          <>\n            <StyledInput\n              {...field}\n              type={exchangeRate ? \"number\" : \"text\"}\n              readOnly\n              placeholder={`${exchangeRate !== null ? exchangeRate : \"Wynik\"}`}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  {newToCurrency || currency || \"\"}\n                </InputAdornment>\n              }\n              id=\"standard-basic\"\n            />\n          </>\n        )}\n      />\n    </>\n  );\n};\n\nexport default NumberInputs;\n"],"sourceRoot":""}